#!/bin/bash

# Script de v√©rification du statut global QFrame GUI
set -e

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

echo "üîç QFrame GUI - V√©rification du statut global"
echo "=============================================="

# V√©rifier les ports Streamlit
PORTS_TO_CHECK=(8501 8502)
ACTIVE_INTERFACES=()

for port in "${PORTS_TO_CHECK[@]}"; do
    if curl -f -s "http://localhost:$port/_stcore/health" > /dev/null 2>&1; then
        ACTIVE_INTERFACES+=($port)
        log_success "‚úÖ Interface active sur port $port"
    fi
done

# V√©rifier les conteneurs Docker
DOCKER_RUNNING=false
if docker ps --filter "name=qframe-gui" --filter "status=running" | grep -q "qframe-gui"; then
    DOCKER_RUNNING=true
    log_success "‚úÖ Conteneur Docker qframe-gui en cours d'ex√©cution"
fi

# V√©rifier les processus Streamlit locaux
STREAMLIT_PROCESSES=$(pgrep -f "streamlit run" | wc -l)
if [ $STREAMLIT_PROCESSES -gt 0 ]; then
    log_success "‚úÖ $STREAMLIT_PROCESSES processus Streamlit locaux actifs"

    # Afficher les PIDs
    PIDS=$(pgrep -f "streamlit run")
    log_info "PIDs: $PIDS"
fi

echo ""
echo "üìä R√©sum√© du statut"
echo "==================="

if [ ${#ACTIVE_INTERFACES[@]} -gt 0 ]; then
    echo ""
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                    üåü QFrame GUI Active üåü                   ‚ïë"
    echo "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£"
    echo "‚ïë                                                              ‚ïë"

    for port in "${ACTIVE_INTERFACES[@]}"; do
        echo "‚ïë  üì± Interface disponible:  http://localhost:$port           ‚ïë"
    done

    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë  üéØ Fonctionnalit√©s:                                        ‚ïë"
    echo "‚ïë     ‚Ä¢ Dashboard principal avec m√©triques                    ‚ïë"
    echo "‚ïë     ‚Ä¢ Gestion des portfolios                                ‚ïë"
    echo "‚ïë     ‚Ä¢ Configuration des strat√©gies                          ‚ïë"
    echo "‚ïë     ‚Ä¢ Monitoring des risques                                ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"

    echo ""
    log_info "üéõÔ∏è Commandes utiles:"

    if [ $STREAMLIT_PROCESSES -gt 0 ]; then
        echo "  ‚Ä¢ Arr√™ter processus locaux: pkill -f 'streamlit run'"
    fi

    if [ "$DOCKER_RUNNING" = true ]; then
        echo "  ‚Ä¢ Arr√™ter Docker: ./deploy-simple.sh down"
        echo "  ‚Ä¢ Voir logs Docker: ./deploy-simple.sh logs"
    fi

    echo "  ‚Ä¢ Test interface: ./deploy-simple.sh test"
    echo "  ‚Ä¢ Red√©marrer: ./deploy-simple.sh up"

else
    log_warning "‚ö†Ô∏è Aucune interface QFrame GUI active"
    echo ""
    log_info "üöÄ Pour d√©marrer l'interface:"
    echo "  ‚Ä¢ Test local: ./deploy-simple.sh test"
    echo "  ‚Ä¢ Docker: ./deploy-simple.sh up"
    echo "  ‚Ä¢ Manuel: cd streamlit_app && poetry run streamlit run main.py"
fi

echo ""
log_info "üîç Pour v√©rifier l'√©tat de sant√©:"
echo "  curl http://localhost:8501/_stcore/health"
echo "  curl http://localhost:8502/_stcore/health"

# V√©rifier la connectivit√© API (optionnel)
echo ""
log_info "üîå Connectivit√© API QFrame:"
if curl -f -s "http://localhost:8000/health" > /dev/null 2>&1; then
    log_success "‚úÖ API QFrame accessible sur http://localhost:8000"
else
    log_warning "‚ö†Ô∏è API QFrame non accessible (optionnel pour GUI)"
fi