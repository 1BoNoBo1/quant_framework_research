# Configuration Production
# ========================
# Configuration pour l'environnement de production

# App en mode production
app:
  debug: false
  testing: false
  production: true

# Logging robuste en production
logging:
  level: "INFO"
  handlers:
    - console
    - file
    - syslog
  file:
    path: "/var/log/qframe/qframe.log"
    max_size: "500MB"
    backup_count: 10
    rotation: "daily"
  syslog:
    facility: "local0"
    address: "/dev/log"

# Base de données production
database:
  host: "${QFRAME_DB_HOST}"
  port: "${QFRAME_DB_PORT}"
  name: "qframe_production"
  username: "${QFRAME_DB_USER}"
  # password via secret obligatoire
  pool_size: 20
  max_overflow: 30
  echo: false
  connect_timeout: 10
  query_timeout: 30
  ssl_mode: "require"
  connection_pool_recycle: 3600

# Redis production avec clustering
redis:
  # Configuration cluster Redis
  host: "${QFRAME_REDIS_HOST}"
  port: "${QFRAME_REDIS_PORT}"
  db: 0
  max_connections: 50
  socket_timeout: 2.0
  health_check_interval: 30
  ssl: true

# API production sécurisée
api:
  host: "0.0.0.0"
  port: "${QFRAME_API_PORT}"
  debug: false
  reload: false
  workers: 4  # Multiple workers en production
  cors:
    enabled: true
    origins:
      - "https://qframe.company.com"
      - "https://dashboard.qframe.company.com"
    credentials: true
  ssl:
    enabled: true
    cert_file: "/etc/ssl/certs/qframe.crt"
    key_file: "/etc/ssl/private/qframe.key"

# MLflow production
mlflow:
  tracking_uri: "${QFRAME_MLFLOW_URI}"
  experiment_name: "qframe_production"
  artifact_location: "s3://qframe-mlflow-artifacts"
  backend_store_uri: "postgresql://mlflow:${MLFLOW_DB_PASSWORD}@${MLFLOW_DB_HOST}/mlflow"

# Monitoring complet en production
monitoring:
  enabled: true
  metrics:
    enabled: true
    port: 9090
    path: "/metrics"
    collectors:
      - "prometheus"
      - "statsd"
  health_check:
    enabled: true
    path: "/health"
    interval: 10
    timeout: 5
  logging:
    structured: true
    json_format: true
  tracing:
    enabled: true
    service_name: "qframe"
    jaeger_endpoint: "${JAEGER_ENDPOINT}"

# Alertes actives en production
alerts:
  enabled: true
  channels:
    email:
      enabled: true
      smtp_host: "${SMTP_HOST}"
      smtp_port: 587
      smtp_tls: true
    slack:
      enabled: true
      webhook_url: "${SLACK_WEBHOOK_URL}"
      channel: "#qframe-alerts"
    pagerduty:
      enabled: true
      integration_key: "${PAGERDUTY_INTEGRATION_KEY}"

# Trading production avec vraies clés API
trading:
  testnet: false  # PRODUCTION: Vrai trading!
  min_order_size: 10.0
  max_order_size: 50000.0
  order_timeout: 300
  max_open_positions: 20
  position_timeout_hours: 48

  # Sécurité renforcée
  require_2fa: true
  max_daily_trades: 1000
  max_daily_volume: 1000000.0

  # Circuit breakers
  circuit_breaker:
    enabled: true
    failure_threshold: 5
    recovery_timeout: 300

# Stratégies production sélectionnées
strategies:
  mean_reversion:
    name: "Production_Mean_Reversion"
    enabled: true
    position_size: 0.01  # Conservateur en production
    max_positions: 3
    risk_per_trade: 0.005

  # Autres stratégies désactivées par défaut en production
  dmn_lstm:
    enabled: false  # Nécessite validation supplémentaire
  funding_arbitrage:
    enabled: false  # Nécessite monitoring spécialisé

# Gestion des risques stricte en production
risk_management:
  max_portfolio_risk: 0.05  # Très conservateur
  max_correlation: 0.5
  drawdown_limit: 0.08
  position_timeout_hours: 24
  default_stop_loss: 0.03
  default_take_profit: 0.06

  # Limites supplémentaires
  max_leverage: 2.0
  max_position_value: 100000.0
  daily_loss_limit: 5000.0

  # Validation en temps réel
  real_time_validation: true
  pre_trade_checks: true

# Performance optimisée pour production
performance:
  max_workers: 8
  cache_ttl: 3600
  chunk_size: 5000
  parallel_processing: true

  # Optimisations spécifiques
  connection_pooling: true
  query_caching: true
  response_compression: true

# Sécurité maximale en production
security:
  jwt_algorithm: "RS256"  # Plus sécurisé que HS256
  jwt_expire_minutes: 30  # Court en production
  password_min_length: 12
  session_timeout: 1800

  # Rate limiting strict
  rate_limiting:
    enabled: true
    requests_per_minute: 60
    burst_size: 10

  # Authentification renforcée
  require_2fa: true
  password_policy:
    min_length: 12
    require_uppercase: true
    require_lowercase: true
    require_numbers: true
    require_symbols: true

  # Audit et compliance
  audit_logging: true
  compliance_checks: true

# Data providers production avec vraies clés
data_providers:
  binance:
    base_url: "https://api.binance.com"
    # api_key et api_secret via secrets
    rate_limit: 1200
    timeout: 10.0
    retry_attempts: 3
    retry_delay: 2.0
  yfinance:
    rate_limit: 2000
    timeout: 15.0

# Backup et disaster recovery
backup:
  enabled: true
  schedule: "0 2 * * *"  # Tous les jours à 2h
  retention_days: 90
  compression: true
  encryption: true
  destinations:
    - "s3://qframe-backups"
    - "gcs://qframe-backups-secondary"

# Infrastructure et déploiement
infrastructure:
  kubernetes:
    namespace: "qframe-production"
    replicas: 3
    resources:
      requests:
        cpu: "500m"
        memory: "1Gi"
      limits:
        cpu: "2000m"
        memory: "4Gi"

  load_balancer:
    enabled: true
    health_check_path: "/health"
    ssl_termination: true

  auto_scaling:
    enabled: true
    min_replicas: 2
    max_replicas: 10
    target_cpu_utilization: 70

# Compliance et réglementation
compliance:
  gdpr:
    enabled: true
    data_retention_days: 365
    anonymization: true

  financial_regulations:
    mifid2: true
    best_execution: true
    transaction_reporting: true

  audit_trail:
    enabled: true
    immutable_logs: true
    digital_signatures: true

# Paths sécurisés en production
paths:
  data_dir: "/var/lib/qframe/data"
  logs_dir: "/var/log/qframe"
  artifacts_dir: "/var/lib/qframe/artifacts"
  models_dir: "/var/lib/qframe/models"
  reports_dir: "/var/lib/qframe/reports"
  backup_dir: "/var/backups/qframe"