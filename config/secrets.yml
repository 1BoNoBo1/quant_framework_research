# Secrets Configuration
# =====================
# Configuration des secrets et variables sensibles
# ATTENTION: Ce fichier ne doit PAS contenir de vraies valeurs secrètes!
# Il définit seulement quels secrets sont attendus et d'où les charger.

secrets:
  # === SECRETS BASE DE DONNÉES ===

  database_password:
    env_var: "QFRAME_DB_PASSWORD"
    required: true
    description: "Mot de passe de la base de données PostgreSQL"
    environments:
      - "staging"
      - "production"

  database_ssl_cert:
    env_var: "QFRAME_DB_SSL_CERT_PATH"
    required: false
    description: "Chemin vers le certificat SSL de la base de données"
    environments:
      - "production"

  # === SECRETS API ET AUTHENTIFICATION ===

  api_secret_key:
    env_var: "QFRAME_API_SECRET"
    required: true
    description: "Clé secrète pour signer les tokens API"
    environments:
      - "staging"
      - "production"
    default: "dev-secret-key-change-in-production"  # Seulement pour dev

  jwt_secret:
    env_var: "QFRAME_JWT_SECRET"
    required: true
    description: "Clé secrète pour signer les JWT tokens"
    environments:
      - "staging"
      - "production"
    default: "dev-jwt-secret-change-in-production"  # Seulement pour dev

  jwt_private_key:
    env_var: "QFRAME_JWT_PRIVATE_KEY"
    required: false
    description: "Clé privée RSA pour JWT (si RS256 utilisé)"
    environments:
      - "production"

  # === SECRETS TRADING ===

  binance_api_key:
    env_var: "BINANCE_API_KEY"
    required: true
    description: "Clé API Binance pour trading"
    environments:
      - "production"

  binance_api_secret:
    env_var: "BINANCE_API_SECRET"
    required: true
    description: "Secret API Binance pour trading"
    environments:
      - "production"

  binance_testnet_api_key:
    env_var: "BINANCE_TESTNET_API_KEY"
    required: false
    description: "Clé API Binance testnet pour développement"
    environments:
      - "development"
      - "staging"

  binance_testnet_api_secret:
    env_var: "BINANCE_TESTNET_API_SECRET"
    required: false
    description: "Secret API Binance testnet pour développement"
    environments:
      - "development"
      - "staging"

  # === SECRETS DONNÉES EXTERNES ===

  alpha_vantage_api_key:
    env_var: "ALPHA_VANTAGE_API_KEY"
    required: false
    description: "Clé API Alpha Vantage pour données financières"

  quandl_api_key:
    env_var: "QUANDL_API_KEY"
    required: false
    description: "Clé API Quandl pour données économiques"

  news_api_key:
    env_var: "NEWS_API_KEY"
    required: false
    description: "Clé API pour flux d'actualités"

  # === SECRETS CLOUD ET STORAGE ===

  aws_access_key_id:
    env_var: "AWS_ACCESS_KEY_ID"
    required: false
    description: "AWS Access Key pour S3, etc."
    environments:
      - "production"

  aws_secret_access_key:
    env_var: "AWS_SECRET_ACCESS_KEY"
    required: false
    description: "AWS Secret Access Key"
    environments:
      - "production"

  gcp_service_account_key:
    env_var: "GCP_SERVICE_ACCOUNT_KEY"
    required: false
    description: "Clé de compte de service Google Cloud"
    environments:
      - "production"

  # === SECRETS MONITORING ET ALERTES ===

  slack_webhook_url:
    env_var: "SLACK_WEBHOOK_URL"
    required: false
    description: "URL webhook Slack pour notifications"

  pagerduty_integration_key:
    env_var: "PAGERDUTY_INTEGRATION_KEY"
    required: false
    description: "Clé d'intégration PagerDuty"
    environments:
      - "production"

  email_password:
    env_var: "EMAIL_PASSWORD"
    required: false
    description: "Mot de passe pour compte email SMTP"

  # === SECRETS MLFLOW ===

  mlflow_db_password:
    env_var: "MLFLOW_DB_PASSWORD"
    required: false
    description: "Mot de passe base de données MLflow"
    environments:
      - "staging"
      - "production"

  mlflow_artifact_store_access_key:
    env_var: "MLFLOW_ARTIFACT_ACCESS_KEY"
    required: false
    description: "Clé d'accès pour stockage d'artefacts MLflow"
    environments:
      - "production"

  # === SECRETS REDIS ===

  redis_password:
    env_var: "QFRAME_REDIS_PASSWORD"
    required: false
    description: "Mot de passe Redis"
    environments:
      - "staging"
      - "production"

  # === SECRETS CHIFFREMENT ===

  encryption_key:
    env_var: "QFRAME_ENCRYPTION_KEY"
    required: false
    description: "Clé de chiffrement pour données sensibles"
    environments:
      - "production"

  backup_encryption_key:
    env_var: "QFRAME_BACKUP_ENCRYPTION_KEY"
    required: false
    description: "Clé de chiffrement pour sauvegardes"
    environments:
      - "production"

  # === SECRETS WEBHOOKS ===

  webhook_secret:
    env_var: "QFRAME_WEBHOOK_SECRET"
    required: false
    description: "Secret pour valider les webhooks entrants"

  # === SECRETS LICENCE ===

  license_key:
    env_var: "QFRAME_LICENSE_KEY"
    required: false
    description: "Clé de licence QFrame"
    environments:
      - "production"

# Configuration globale des secrets
global_config:
  # Chiffrement des secrets en mémoire
  encrypt_in_memory: true

  # Rotation automatique des secrets
  auto_rotation:
    enabled: false  # À implémenter
    rotation_interval_days: 90

  # Audit des accès aux secrets
  audit_access: true

  # Masquage dans les logs
  mask_in_logs: true

  # Validation des secrets
  validate_on_load: true

  # Timeout pour le chargement des secrets
  load_timeout: 30

# Sources alternatives pour les secrets
secret_sources:
  # HashiCorp Vault
  vault:
    enabled: false
    url: "${VAULT_URL}"
    auth_method: "token"
    mount_path: "secret"

  # AWS Secrets Manager
  aws_secrets_manager:
    enabled: false
    region: "us-east-1"

  # Azure Key Vault
  azure_key_vault:
    enabled: false
    vault_url: "${AZURE_KEY_VAULT_URL}"

  # Google Secret Manager
  google_secret_manager:
    enabled: false
    project_id: "${GCP_PROJECT_ID}"

  # Kubernetes Secrets
  kubernetes:
    enabled: false
    namespace: "qframe"

# Patterns de validation pour les secrets
validation_patterns:
  api_key: "^[a-zA-Z0-9]{32,}$"
  jwt_secret: "^.{32,}$"
  password: "^.{8,}$"
  url: "^https?://.+"
  base64: "^[A-Za-z0-9+/]*={0,2}$"

# Environnements autorisés par type de secret
environment_restrictions:
  production_only:
    - "binance_api_key"
    - "binance_api_secret"
    - "encryption_key"
    - "backup_encryption_key"

  non_production:
    - "binance_testnet_api_key"
    - "binance_testnet_api_secret"

  development_defaults:
    api_secret_key: "dev-secret-key-for-development-only"
    jwt_secret: "dev-jwt-secret-for-development-only"